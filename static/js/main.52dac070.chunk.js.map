{"version":3,"sources":["store/reducers/systemReducer.js","store/reducers/padReducer.js","store/reducers/index.js","store/store.js","services/storageService.js","services/padService.js","data/pads.js","store/actions/padActions.js","cmps/Spectrogaph.jsx","cmps/PadPreview.jsx","cmps/PadList.jsx","cmps/Audio.jsx","cmps/Pause.jsx","cmps/Play.jsx","cmps/Msg.jsx","pages/LoopMachine.jsx","routes.js","store/actions/systemActions.js","cmps/Navbar.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["initialState","isLoading","pads","rootReducer","combineReducers","system","state","action","type","pad","map","_id","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","gPads","storageService","loadFromStorage","key","val","localStorage","getItem","JSON","parse","saveToStorage","stringify","name","loop","isOn","KEY","padService","query","getById","padId","find","Promise","resolve","save","_pad","saveMultiplePads","padsIds","includes","a","updatePad","dispatch","console","log","updateMultiplePads","Spectrogaph","padIsOn","isPlaying","class","PadPreview","setNewPadsIdsForPlay","idx","playedSeconds","setLoopToRemove","newPadsIdsForPlay","useDispatch","className","onClick","newPad","prevArray","filter","id","loopsArray","onUpdatePad","getPadIcon","PadList","Audio","activePads","handleEnded","handleProgress","handleDuration","url","height","width","playing","controls","onEnded","onProgress","onDuration","Pause","handleClick","Play","length","Msg","msg","routes","path","component","useSelector","useState","duration","setDuration","setPlayedSeconds","setIsPlaying","setActivePads","loopToRemove","setMsg","useEffect","LoopArray","getActivePads","setTimeout","played","_duration","Navbar","to","src","alt","App","route","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52dac070.chunk.js","sourcesContent":["const initialState = {\r\n  isLoading: false\r\n};\r\n\r\nexport function systemReducer (state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true };\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false };\r\n    default: return state;\r\n  }\r\n}\r\n","const initialState = {\r\n    pads: []\r\n}\r\n\r\nexport function padReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_PADS':\r\n            return {\r\n                ...state,\r\n                pads: action.pads\r\n            }\r\n        case 'UPDATE_PAD':\r\n            return {\r\n                ...state,\r\n                pads: state.pads.map(pad => pad._id === action.pad._id?action.pad:pad )\r\n            } \r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport {systemReducer} from './systemReducer';\r\nimport { padReducer } from './padReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  system: systemReducer,\r\n  pad: padReducer\r\n})\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index.js';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","function loadFromStorage(key) {\r\n    var val = localStorage.getItem(key)\r\n    return (val) ? JSON.parse(val) : null;\r\n}\r\n\r\nfunction saveToStorage(key, val) {\r\n    localStorage[key] = JSON.stringify(val);\r\n}\r\n\r\n\r\nexport const storageService = {\r\n    loadFromStorage,\r\n    saveToStorage\r\n}","import { storageService } from \"./storageService\"\r\nimport { pads } from \"../data/pads\";\r\n\r\n\r\nconst KEY = 'PADS';\r\nlet gPads;\r\n\r\nexport const padService = {\r\n    query,\r\n    getById,\r\n    save,\r\n    saveMultiplePads\r\n}\r\n\r\n\r\nasync function query() {\r\n    gPads = await storageService.loadFromStorage(KEY)\r\n    if(!gPads){\r\n        gPads = [...pads]\r\n        storageService.saveToStorage(KEY, gPads)\r\n    }\r\n    return gPads\r\n}\r\n\r\n\r\n\r\nfunction getById(padId) {\r\n    const pad = pads.find(pad => pad._id === padId)\r\n    return Promise.resolve(pad)\r\n}\r\n\r\n\r\nfunction saveMultiplePads(padsIds) {\r\n    gPads = gPads.map(_pad=>\r\n        padsIds.includes(_pad._id)? \r\n        {..._pad, isOn:!_pad.isOn}\r\n        : _pad\r\n    )\r\n    storageService.saveToStorage(KEY, gPads)\r\n    return gPads\r\n}\r\n\r\n\r\nfunction save(pad) {\r\n    gPads = gPads.map(_pad=>\r\n        _pad._id === pad._id? pad : _pad\r\n    )\r\n    storageService.saveToStorage(KEY, gPads)\r\n}\r\n","export const pads = [\r\n    {\r\n        \r\n        _id: 101,\r\n        name: 'Disco Party',\r\n        loop:\"loops/120_future_funk_beats_25.mp3\",\r\n        isOn:false \r\n    }, \r\n    {\r\n        _id: 102,\r\n        name: 'Night Mood',\r\n        loop: \"loops/120_stutter_breakbeats_16.mp3\",\r\n        isOn:false \r\n    }, \r\n    {\r\n        _id: 103,\r\n        name: 'Bass Guitar',\r\n        loop:\"loops/Bass Warwick heavy funk groove on E 120 BPM.mp3\",\r\n        isOn:false \r\n    },\r\n    {\r\n        \r\n        _id: 104,\r\n        name: 'Classic Guitar',\r\n        loop:\"loops/electric guitar coutry slide 120bpm - B.mp3\",\r\n        isOn:false \r\n    }, \r\n    {\r\n        _id: 105,\r\n        name: 'Drums',\r\n        loop: \"loops/FUD_120_StompySlosh.mp3\",\r\n        isOn:false \r\n    }, \r\n    {\r\n        _id: 106,\r\n        name: 'Tropical Island',\r\n        loop:\"loops/GrooveB_120bpm_Tanggu.mp3\",\r\n        isOn:false \r\n    },\r\n    {\r\n        \r\n        _id: 107,\r\n        name: 'Gamming Style',\r\n        loop:\"loops/MazePolitics_120_Perc.mp3\",\r\n        isOn:false \r\n    }, \r\n    {\r\n        _id: 108,\r\n        name: 'Groovy kid',\r\n        loop: \"loops/PAS3GROOVE1.03B.mp3\",\r\n        isOn:false \r\n    }, \r\n    {\r\n        _id: 109,\r\n        name: 'Alien Bit',\r\n        loop:\"loops/SilentStar_120_Em_OrganSynth.mp3\",\r\n        isOn:false \r\n    }\r\n]\r\n\r\n","import { padService } from '../../services/padService'\r\nimport { loading, doneLoading } from './systemActions';\r\n\r\n\r\n//-----------------PAD CRUD------------------------\r\n\r\n\r\nexport function loadPads() {\r\n  \r\n    return async dispatch => {\r\n        try{\r\n            dispatch(loading());\r\n            const pads = await padService.query();\r\n            dispatch({ type: 'SET_PADS', pads })\r\n        }catch(err){\r\n            console.log('err in loading pads', err);\r\n        }finally{\r\n            dispatch(doneLoading());\r\n        }\r\n    }\r\n}\r\n\r\nexport function updatePad(pad) {\r\n\r\n  return async dispatch => {\r\n      try{\r\n          await padService.save(pad)\r\n          dispatch({ type: 'UPDATE_PAD', pad})\r\n      }catch(err){\r\n          console.log('err in updating pad', err); \r\n      }\r\n  }\r\n}\r\n\r\nexport function updateMultiplePads(padsIds) {\r\n\r\n  return async dispatch => {\r\n      try{\r\n          const pads = await padService.saveMultiplePads(padsIds)\r\n          dispatch({ type: 'SET_PADS', pads })\r\n      }catch(err){\r\n          console.log('err in updating pads', err); \r\n      }\r\n  }\r\n}\r\n\r\n\r\n\r\n// export function addRecording(newSession) {\r\n//     return async dispatch => {\r\n//         try{\r\n//           const session = await recordeService.add(newSession)\r\n//             dispatch({ type: 'ADD_SESSION', session})\r\n//             return session\r\n//         }catch(err){\r\n//             console.log('err in adding new recorded session', err); \r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\n\r\n","import React from \"react\";\r\n\r\nexport function Spectrogaph({padIsOn,isPlaying}) {\r\n\r\n    return (\r\n    <div class={`spectrograph ${padIsOn&&isPlaying?'active':''}`}>\r\n        <div class=\"spectrograph__bar\"></div>\r\n        <div class=\"spectrograph__bar\"></div>\r\n        <div class=\"spectrograph__bar\"></div>\r\n        <div class=\"spectrograph__bar\"></div>\r\n        <div class=\"spectrograph__bar\"></div>\r\n        <div class=\"spectrograph__bar\"></div>\r\n        <div class=\"spectrograph__bar\"></div>\r\n        <div class=\"spectrograph__bar\"></div>\r\n        <div class=\"spectrograph__bar\"></div>\r\n        <div class=\"spectrograph__bar\"></div>\r\n        <div class=\"spectrograph__bar\"></div>\r\n        <div class=\"spectrograph__bar\"></div>\r\n        <div class=\"spectrograph__bar\"></div>\r\n        <div class=\"spectrograph__bar\"></div>\r\n        <div class=\"spectrograph__bar\"></div>\r\n        <div class=\"spectrograph__bar\"></div>\r\n        <div class=\"spectrograph__bar\"></div>\r\n        <div class=\"spectrograph__bar\"></div>\r\n        <div class=\"spectrograph__bar\"></div>\r\n        <div class=\"spectrograph__bar\"></div>\r\n    </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updatePad } from \"../store/actions/padActions\";\r\nimport { BsToggleOff,BsToggleOn } from 'react-icons/bs';\r\nimport { SiDiscogs } from 'react-icons/si';\r\nimport { IoIosCloudyNight } from 'react-icons/io';\r\nimport { GiGuitar } from 'react-icons/gi';\r\nimport { FaGuitar ,FaRegHandPeace } from 'react-icons/fa';\r\nimport { GiDrum } from 'react-icons/gi';\r\nimport { GiIsland } from 'react-icons/gi';\r\nimport { IoGameControllerOutline } from 'react-icons/io5';\r\nimport { RiAliensLine } from 'react-icons/ri';\r\n\r\nimport { Spectrogaph } from './Spectrogaph';\r\n\r\n\r\nexport function PadPreview({pad,idx,setNewPadsIdsForPlay, playedSeconds,isPlaying, setLoopToRemove,newPadsIdsForPlay}) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onUpdatePad = (pad) => {\r\n        const newPad = {\r\n            ...pad,\r\n            isOn:!pad.isOn\r\n        }\r\n        if(newPadsIdsForPlay.includes(pad._id)){\r\n            setNewPadsIdsForPlay(prevArray => prevArray.filter(id => id !== pad._id));\r\n        }else{\r\n            if(pad.isOn){\r\n                //remove pad's loop form activePads array\r\n                dispatch(updatePad(newPad))\r\n                setLoopToRemove(pad.loop)\r\n            }else{\r\n                if(playedSeconds===0&&!isPlaying){\r\n                    //add pad's loop to activePads array if its the first loop cycle\r\n                    dispatch(updatePad(newPad))\r\n                }else{\r\n                    //add pad's loop to NewPadsIdsForPlay to be updated for the next loop cycle\r\n                    setNewPadsIdsForPlay(loopsArray => [...loopsArray, pad._id]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const getPadIcon = (padId) =>{\r\n        switch (padId) {\r\n            case 101:\r\n                return <SiDiscogs/>; \r\n            case 102:\r\n                return <IoIosCloudyNight/>\r\n            case 103:\r\n                return <GiGuitar/>\r\n            case 104:\r\n                return <FaGuitar/>\r\n            case 105:\r\n                return <GiDrum/>\r\n            case 106:\r\n                return <GiIsland/>   \r\n            case 107:\r\n                return <IoGameControllerOutline/>\r\n            case 108:\r\n                return <FaRegHandPeace/>\r\n            case 109:\r\n                return <RiAliensLine/>\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`pad-preview btn glassmorphism ${pad.isOn?'active':''} ${newPadsIdsForPlay.includes(pad._id)?'waiting-to-join':''}`} key={pad._id} onClick={()=>onUpdatePad(pad)}>\r\n            <div className=\"pad-header flex space-between\">\r\n                <div className=\"icon\">{getPadIcon(pad._id)}</div>\r\n                <div className=\"pad-state-btn\">\r\n                    {pad.isOn?\r\n                    <BsToggleOn className='icon on'/>\r\n                    :\r\n                    <BsToggleOff className='icon off'/>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"pad-name\">{pad.name}</div>\r\n            <Spectrogaph padIsOn={pad.isOn} isPlaying={isPlaying} />\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { PadPreview } from \"./PadPreview\";\r\n\r\nexport function PadList({pads,setLoopToRemove,setNewPadsIdsForPlay,isPlaying,playedSeconds,newPadsIdsForPlay}) {\r\n\r\n    return (\r\n        <div className=\"pad-list-container\">\r\n            <div className='inner-container'>\r\n            {\r\n                pads.map((pad,idx)=>\r\n                    <PadPreview \r\n                    key={pad._id} \r\n                    pad={pad} \r\n                    idx={idx}\r\n                    setNewPadsIdsForPlay={setNewPadsIdsForPlay}\r\n                    playedSeconds={playedSeconds}\r\n                    isPlaying={isPlaying}\r\n                    setLoopToRemove={setLoopToRemove}\r\n                    newPadsIdsForPlay={newPadsIdsForPlay}\r\n                    />\r\n                )\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport ReactPlayer from 'react-player'\r\n\r\nexport function Audio({\r\n    activePads,\r\n    isPlaying,\r\n    handleEnded,\r\n    handleProgress,\r\n    handleDuration\r\n}) {\r\n\r\n    return (\r\n        <>\r\n        {\r\n            activePads.map(loop=>\r\n                <div className='player-wrapper' key={loop} >\r\n                    <ReactPlayer\r\n                    className='react-player fixed-bottom'\r\n                    url={loop}\r\n                    height='0'\r\n                    width='0'\r\n                    playing={isPlaying}\r\n                    controls = {false}\r\n                    onEnded={handleEnded}\r\n                    onProgress={handleProgress}\r\n                    onDuration={handleDuration}\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { FaPause } from \"react-icons/fa\";\r\n\r\nexport function Pause({handleClick}) {\r\n  \r\n  return (\r\n    <button className=\"player-button flex place-center justify-center\" onClick={() => handleClick()}>\r\n     <FaPause/>\r\n    </button>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { FaPlay } from \"react-icons/fa\";\r\n\r\nexport function Play({activePads,handleClick}) {\r\n\r\n    return (\r\n      <button className={`player-button flex place-center justify-center ${activePads.length>0?'active':''}`} onClick={() => handleClick()}>\r\n        <FaPlay/>\r\n      </button>\r\n    );\r\n  }\r\n  ","import React from \"react\";\r\nimport { BiErrorCircle } from \"react-icons/bi\";\r\n\r\nexport function Msg({msg}) {\r\n\r\n    return (\r\n        <div className=\"msg flex place-center\">\r\n        <BiErrorCircle className='icon'/> <span className='margin-left-5px'>{msg}</span>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect,useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { loadPads, updateMultiplePads } from \"../store/actions/padActions\";\r\nimport { PadList } from \"../cmps/PadList.jsx\";\r\nimport { Audio } from \"../cmps/Audio\";\r\nimport { Pause } from \"../cmps/Pause.jsx\";\r\nimport { Play } from \"../cmps/Play.jsx\";\r\nimport { Msg } from \"../cmps/Msg.jsx\";\r\n// import { Recorder } from \"../cmps/Recorder.jsx\";\r\n\r\nexport const LoopMachine = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const pads = useSelector(state => state.pad.pads); \r\n\r\n    const [duration, setDuration] = useState(null); //playing duration\r\n    const [playedSeconds, setPlayedSeconds] = useState(0); //the time elapsed from playing\r\n    const [isPlaying, setIsPlaying] = useState(false)  //play/pause audio\r\n    const [activePads, setActivePads] = useState([])  //active pads playing\r\n    const [newPadsIdsForPlay, setNewPadsIdsForPlay] = useState([]) //array of pads to the next loop cycle\r\n    const [loopToRemove, setLoopToRemove] = useState(null) //loop to remove from the current playing loops\r\n    const [msg, setMsg] = useState(null) //err msg\r\n\r\n    // setup pads \r\n    useEffect(() => {\r\n        dispatch(loadPads())\r\n    }, [dispatch])\r\n\r\n    \r\n    // filter all pads to get only the active pads.\r\n    useEffect(() => {\r\n        function getActivePads() {\r\n            const activePads = pads.filter(pad=>pad.isOn===true) \r\n            const LoopArray = activePads.map(pad=>pad.loop)\r\n            setActivePads(LoopArray)\r\n        }\r\n        getActivePads()\r\n    }, [pads])\r\n    \r\n\r\n    // no active pads?  ==>  stops playing\r\n    useEffect(() => {\r\n        if(activePads.length===0){\r\n            setIsPlaying(false)\r\n        }else if(activePads.length>0&&!isPlaying){\r\n            setIsPlaying(false)\r\n        }\r\n    }, [activePads,isPlaying])\r\n\r\n\r\n    const handleProgress = state => {\r\n        //loop cycle ends\r\n        // if(state.playedSeconds===duration){ \r\n        if(state.played===1){ \r\n            setIsPlaying(false)\r\n            //update the pads that inside newPadsIdsForPlay, \r\n            //and seting a new ActivePads array before the next loop cycle \r\n            if(newPadsIdsForPlay.length>0){\r\n                dispatch(updateMultiplePads(newPadsIdsForPlay))\r\n            }\r\n            setNewPadsIdsForPlay([])\r\n\r\n            setIsPlaying(true)\r\n        }\r\n\r\n        //When a pad is turned off, it is removed from activePads array\r\n        if(loopToRemove){\r\n            const pad = pads.find(_pad=>_pad.loop===loopToRemove)\r\n            if(!pad.isOn){\r\n                setActivePads(activePads.filter(loop=>loop!==loopToRemove))\r\n            }\r\n            setLoopToRemove(null)\r\n        }\r\n        \r\n\r\n        if(!isPlaying){\r\n            setPlayedSeconds(state.playedSeconds)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n    }, [isPlaying])    \r\n    \r\n    useEffect(() => {\r\n        if(activePads.length===0&&newPadsIdsForPlay.length>0){\r\n            //start immediately a new cycle \r\n            dispatch(updateMultiplePads(newPadsIdsForPlay))\r\n            setIsPlaying(true)\r\n            setNewPadsIdsForPlay([])\r\n\r\n        }\r\n    }, [activePads,dispatch,newPadsIdsForPlay]) \r\n    \r\n    \r\n    useEffect(() => {\r\n    }, [newPadsIdsForPlay])\r\n\r\n    const handleEnded = () => {\r\n    }\r\n\r\n    const handleDuration = (_duration) => {\r\n        if(!duration){\r\n            setDuration(_duration)\r\n        }else if(_duration > duration){\r\n            setDuration(_duration)\r\n        }\r\n    } \r\n    \r\n    const onPlayAudio = () => {\r\n        if(activePads.length>0){\r\n            setIsPlaying(true)\r\n        }else{\r\n            setMsg('Select at least one pad to start')\r\n            setTimeout(() => {\r\n                setMsg(null)\r\n            }, 1500);\r\n        }\r\n    }\r\n\r\n\r\n    if(!pads) return <div>loading...</div>\r\n    return (\r\n        <div className=\"loop-machine-container\">\r\n            {isPlaying&&\r\n            //background\r\n                <div class=\"scene\">\r\n                    <div class=\"wrap\">\r\n                        <div class=\"wall wall-right\"></div>\r\n                        <div class=\"wall wall-left\"></div>   \r\n                        <div class=\"wall wall-top\"></div>\r\n                        <div class=\"wall wall-bottom\"></div> \r\n                        <div class=\"wall wall-back\"></div>    \r\n                    </div>\r\n                    <div class=\"wrap\">\r\n                        <div class=\"wall wall-right\"></div>\r\n                        <div class=\"wall wall-left\"></div>   \r\n                        <div class=\"wall wall-top\"></div>\r\n                        <div class=\"wall wall-bottom\"></div>   \r\n                        <div class=\"wall wall-back\"></div>    \r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n\r\n            <div className=\"controls flex justify-center\">\r\n                {isPlaying ? \r\n                    <Pause handleClick={() => setIsPlaying(false)} /> :\r\n                    <Play activePads={activePads} handleClick={() => onPlayAudio()} />\r\n                }\r\n            </div>\r\n\r\n            <div className=\"inspiration-text\"> make your own music.</div>\r\n\r\n            <PadList \r\n            pads={pads} \r\n            setNewPadsIdsForPlay={setNewPadsIdsForPlay}\r\n            playedSeconds={playedSeconds}\r\n            isPlaying={isPlaying}\r\n            setLoopToRemove={setLoopToRemove}\r\n            newPadsIdsForPlay={newPadsIdsForPlay}\r\n            />\r\n\r\n            <Audio \r\n            activePads={activePads}\r\n            isPlaying={isPlaying}\r\n            handleEnded={handleEnded}\r\n            handleProgress={handleProgress}\r\n            handleDuration={handleDuration}\r\n            setIsPlaying={setIsPlaying}\r\n            />\r\n            \r\n            {msg&&<Msg msg={msg}/>}\r\n\r\n            <div className='bottom-padding-for-scroll'></div>\r\n\r\n           \r\n            {/* <Recorder activePads={activePads} isPlaying={isPlaying}/> */}\r\n\r\n        </div>\r\n    )\r\n}","import { LoopMachine } from './pages/LoopMachine.jsx'\r\n\r\nexport const routes=[\r\n  {\r\n    path: '/',\r\n    component: LoopMachine,\r\n  }\r\n]\r\n","export function loading() {\r\n  return { type: 'LOADING_START' }\r\n}\r\nexport function doneLoading() {\r\n  return { type: 'LOADING_DONE' }\r\n}","import React from \"react\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const Navbar = () => {\r\n\r\n    return (\r\n        <div className='flex space-between navbar'>\r\n        <div><NavLink className=\"navlink-btn\" to=\"/\"><img src=\"img/logo.png\" alt='' className=\"logo-img\"></img>\r\n         <span> \r\n            Loopix \r\n         </span>\r\n        </NavLink></div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport {routes} from './routes.js'\nimport { Navbar } from './cmps/Navbar'\n\nexport function App() {\n\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <Switch>\n        { routes.map(route => <Route key={ route.path } exact component={ route.component } path={ route.path } />) }\n      </Switch>\n    </div>\n  )\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { HashRouter as Router } from 'react-router-dom'\nimport { store } from './store/store'\nimport { App } from './App.jsx'\nimport './assets/styles/global.scss'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}